mat-toolbar {
  background: transparent;
  height: 70px;
  padding-left: 70px;
  padding-right: 70px;
}
@import url("https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Mitr:wght@300&display=swap");

.font-Login {
  font-family: "Bebas Neue", sans-serif;
}
.font-Login button:hover {
  background-color: rgb(37, 37, 37);
}
.font-main {
  font-family: "Mitr", sans-serif;
}
.filter {
  backdrop-filter: blur(0px);
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.588),
    rgba(109, 0, 0, 0)
  );
  -webkit-backdrop-filter: blur(10px);
  border-radius: 10px;
  margin-top: 170px;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}
::ng-deep .dense-4 .mdc-notched-outline > * {
  border-color: rgb(155, 155, 155) !important;
}

.dense-4 textarea::placeholder {
  color: rgb(182, 182, 182);
}

.dense-4 input::placeholder {
  color: rgb(87, 87, 87);
}
.card-bg {
  content: "";
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  background-color: #000000b1; /* สีพื้นหลังของการ์ด */
  border-radius: 30px; /* ขอบมน */
  // box-shadow: 0 0 2px rgba(0, 0, 0, 0.3); /* เอฟเฟกต์ขอบมน */
  z-index: -1; /* กำหนดให้มีลำดับการแสดงผลต่ำกว่าภาพ */
  width: 800px;
  margin-top: 40px;
  margin-left: 5px;
}
.card-bg2 {
  content: "";
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  background-color: #000000b1; /* สีพื้นหลังของการ์ด */
  border-radius: 100px; /* ขอบมน */
  // box-shadow: 0 0 2px rgba(0, 0, 0, 0.3); /* เอฟเฟกต์ขอบมน */
  z-index: -1; /* กำหนดให้มีลำดับการแสดงผลต่ำกว่าภาพ */
  width: 820px;
  height: 200px;
  margin-top: 40px;
  margin-left: 44px;
}
.dark-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(
    0,
    0,
    0,
    0.8
  ); /* ปรับความโปร่งใสของสีดำตรงนี้ตามความต้องการ */
  z-index: 999; /* ปรับ z-index ตามความต้องการ */
  display: none; /* เริ่มต้นซ่อนองค์ประกอบนี้ */
}

.popup.open-popup ~ .dark-overlay {
  display: block; /* เมื่อ popup ถูกเปิด ให้แสดงพื้นหลังมืดลง */
}

.popupEdit.open-popupEdit ~ .dark-overlay {
  display: block; /* เมื่อมี popup เปิด ให้แสดง overlay ด้วยการใช้ CSS selector อ้างอิงจาก element ต่อไปของ popup */
}

.popupBig.open-popupBig ~ .dark-overlay {
  display: block; /* เมื่อมี popup เปิด ให้แสดง overlay ด้วยการใช้ CSS selector อ้างอิงจาก element ต่อไปของ popup */
}

.popupAvatar.open-popupAvatar ~ .dark-overlay {
  display: block; /* เมื่อมี popup เปิด ให้แสดง overlay ด้วยการใช้ CSS selector อ้างอิงจาก element ต่อไปของ popup */
}


.popup {
  width: 400px;
  background-color: rgb(240, 248, 255);
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.1);
  text-align: center;
  padding: 0 30px 30px;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
  z-index: 9999; /* ให้ป้อปอัพอยู่ด้านหน้า */
}

.open-popup {
  visibility: visible;
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
}

.popupEdit {
  width: 400px;
  background-color: rgb(240, 248, 255);
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.1);
  text-align: center;
  padding: 0 30px 30px;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
  z-index: 9999; /* ให้ป้อปอัพอยู่ด้านหน้า */
}

.open-popupEdit {
  visibility: visible;
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
}

.popupBig {
  width: 400px;
  background-color: rgb(240, 248, 255);
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.1);
  text-align: center;
  padding: 0 30px 30px;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
  z-index: 9999; /* ให้ป้อปอัพอยู่ด้านหน้า */
}

.open-popupBig {
  visibility: visible;
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
}


.popupAvatar {
  width: 400px;
  background-color: rgb(240, 248, 255);
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.1);
  text-align: center;
  padding: 0 30px 30px;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
  z-index: 9999; /* ให้ป้อปอัพอยู่ด้านหน้า */
}

.open-popupAvatar {
  visibility: visible;
  top: 50%;
  transform: translate(-50%, -50%) scale(1);
}





.buttonupload {
  padding: 10px 20px;
  background-color: rgb(23, 16, 162);
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 150px;
  font-weight: bolder;
  margin-top: 10px;
}
.buttoncloses {
  padding: 10px 20px;
  background-color: rgb(186, 14, 14);
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 150px;
  font-weight: bolder;
  margin-left: 10px;
}
@font-face {
  font-family: Cyber;
  src: url("https://assets.codepen.io/605876/Blender-Pro-Bold.otf");
  font-display: swap;
}

* {
  box-sizing: border-box;
}

body {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  min-height: 100vh;
  font-family: "Cyber", sans-serif;
  background: linear-gradient(90deg, #f5c400 70%, #e6de00 70%), #fff700;
}

body .cybr-btn + .cybr-btn {
  margin-top: 2rem;
}

.cybr-btn {
  --primary: hsl(
    var(--primary-hue),
    85%,
    calc(var(--primary-lightness, 50) * 1%)
  );
  --shadow-primary: hsl(var(--shadow-primary-hue), 90%, 50%);
  --color: hsl(0, 0%, 100%);
  --font-size: 26px;
  --shadow-primary-hue: 180;
  --label-size: 9px;
  --shadow-secondary-hue: 60;
  --shadow-secondary: hsl(var(--shadow-secondary-hue), 90%, 60%);
  --clip: polygon(
    0 0,
    100% 0,
    100% 100%,
    95% 100%,
    95% 90%,
    85% 90%,
    85% 100%,
    8% 100%,
    0 70%
  );
  --border: 4px;
  --shimmy-distance: 5;
  --clip-one: polygon(
    0 2%,
    100% 2%,
    100% 95%,
    95% 95%,
    95% 90%,
    85% 90%,
    85% 95%,
    8% 95%,
    0 70%
  );
  --clip-two: polygon(
    0 78%,
    100% 78%,
    100% 100%,
    95% 100%,
    95% 90%,
    85% 90%,
    85% 100%,
    8% 100%,
    0 78%
  );
  --clip-three: polygon(
    0 44%,
    100% 44%,
    100% 54%,
    95% 54%,
    95% 54%,
    85% 54%,
    85% 54%,
    8% 54%,
    0 54%
  );
  --clip-four: polygon(
    0 0,
    100% 0,
    100% 0,
    95% 0,
    95% 0,
    85% 0,
    85% 0,
    8% 0,
    0 0
  );
  --clip-five: polygon(
    0 0,
    100% 0,
    100% 0,
    95% 0,
    95% 0,
    85% 0,
    85% 0,
    8% 0,
    0 0
  );
  --clip-six: polygon(
    0 40%,
    100% 40%,
    100% 85%,
    95% 85%,
    95% 85%,
    85% 85%,
    85% 85%,
    8% 85%,
    0 70%
  );
  --clip-seven: polygon(
    0 63%,
    100% 63%,
    100% 80%,
    95% 80%,
    95% 80%,
    85% 80%,
    85% 80%,
    8% 80%,
    0 70%
  );
  font-family: "Cyber", sans-serif;
  color: var(--color);
  cursor: pointer;
  background: transparent;
  text-transform: uppercase;
  font-size: var(--font-size);
  outline: transparent;
  letter-spacing: 2px;
  position: relative;
  font-weight: 700;
  border: 0;
  min-width: 150px;
  height: 55px;
  // line-height: 75px;
  transition: background 0.2s;
}

.vote-btn {
  --primary-hue: 0; /* กำหนดสีแดงสำหรับปุ่ม Vote */
}

.upload-btn {
  --primary-hue: 220; /* กำหนดสีน้ำเงินสำหรับปุ่ม Upload */
}

.cybr-btn:hover {
  --primary: hsl(
    var(--primary-hue),
    85%,
    calc(var(--primary-lightness, 50) * 0.8%)
  );
}
.cybr-btn:active {
  --primary: hsl(
    var(--primary-hue),
    85%,
    calc(var(--primary-lightness, 50) * 0.6%)
  );
}

.cybr-btn:after,
.cybr-btn:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  clip-path: var(--clip);
  z-index: -1;
}

.cybr-btn:before {
  background: var(--shadow-primary);
  transform: translate(var(--border), 0);
}

.cybr-btn:after {
  background: var(--primary);
}

.cybr-btn__tag {
  position: absolute;
  padding: 1px 4px;
  letter-spacing: 1px;
  line-height: 1;
  bottom: -5%;
  right: 5%;
  font-weight: normal;
  color: hsl(0, 0%, 0%);
  font-size: var(--label-size);
}

.cybr-btn__glitch {
  position: absolute;
  top: calc(var(--border) * -1);
  left: calc(var(--border) * -1);
  right: calc(var(--border) * -1);
  bottom: calc(var(--border) * -1);
  background: var(--shadow-primary);
  text-shadow: 2px 2px var(--shadow-primary), -2px -2px var(--shadow-secondary);
  clip-path: var(--clip);
  animation: glitch 2s infinite;
  display: none;
}

.cybr-btn:hover .cybr-btn__glitch {
  display: block;
}

.cybr-btn__glitch:before {
  content: "";
  position: absolute;
  top: calc(var(--border) * 1);
  right: calc(var(--border) * 1);
  bottom: calc(var(--border) * 1);
  left: calc(var(--border) * 1);
  clip-path: var(--clip);
  background: var(--primary);
  z-index: -1;
}

@keyframes glitch {
  0% {
    clip-path: var(--clip-one);
  }
  2%,
  8% {
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }
  6% {
    clip-path: var(--clip-two);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }
  9% {
    clip-path: var(--clip-two);
    transform: translate(0, 0);
  }
  10% {
    clip-path: var(--clip-three);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }
  13% {
    clip-path: var(--clip-three);
    transform: translate(0, 0);
  }
  14%,
  21% {
    clip-path: var(--clip-four);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }
  25% {
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }
  30% {
    clip-path: var(--clip-five);
    transform: translate(calc(var(--shimmy-distance) * -1%), 0);
  }
  35%,
  45% {
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * -1%));
  }
  40% {
    clip-path: var(--clip-six);
    transform: translate(calc(var(--shimmy-distance) * 1%));
  }
  50% {
    clip-path: var(--clip-six);
    transform: translate(0, 0);
  }
  55% {
    clip-path: var(--clip-seven);
    transform: translate(calc(var(--shimmy-distance) * 1%), 0);
  }
  60% {
    clip-path: var(--clip-seven);
    transform: translate(0, 0);
  }
  31%,
  61%,
  100% {
    clip-path: var(--clip-four);
  }
}

.cybr-btn:nth-of-type(2) {
  --primary-hue: 260;
}
.snackbar-success {
  background-color: #4caf50; // สีพื้นหลังของ Snackbar สำเร็จ
  color: white; // สีข้อความของ Snackbar สำเร็จ
  animation: slideIn 0.5s, slideOut 0.5s 1.5s; // เพิ่ม animation เมื่อปรากฎและหายไป

  @keyframes slideIn {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes slideOut {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(100%);
    }
  }
}

/* สไตล์สำหรับ Popup */
.upload-success-popup {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 20px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 9999;
}

/* สไตล์สำหรับเนื้อหาใน Popup */
.upload-success-popup .content {
  text-align: center;
}

/* สไตล์สำหรับเอฟเฟคติ๊ก */
.upload-success-popup .content i {
  color: green;
  font-size: 50px;
}

/* สไตล์สำหรับข้อความใน Popup */
.upload-success-popup .content p {
  margin-top: 10px;
  font-size: 20px;
}

.popup-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(
    0,
    0,
    0,
    0.5
  ); /* เพิ่มสีพื้นหลังที่มืดลงเบาๆ เมื่อแสดง popup */
  backdrop-filter: blur(10px); /* เพิ่มความเบลอให้กับพื้นหลัง */
}

.hoveimg {
  transition: transform 0.2s ease; /* เพิ่ม transition เพื่อทำให้การเปลี่ยนแปลงเกิดขึ้นอย่างนุ่มนวล */
}

.hoveimg:hover {
  transform: scale(1.2); /* ซูมภาพให้ขนาดเพิ่มขึ้น 10% เมื่อ hover */
}
.buttons {
	display: flex;
	width: 380px;
	gap: 10px;
	--b: 5px;   /* the border thickness */
	--h: 1.8em; /* the height */
	
  }
  
  .buttons button {
	--_c: #660000;
	flex: calc(1.25 + var(--_s,0));
	min-width: 0;
	font-size: 17px;
	font-weight: bold;
	height: var(--h);
	cursor: pointer;
	color: var(--_c);
	border: var(--b) solid var(--_c);
	background: 
	  conic-gradient(at calc(100% - 1.3*var(--b)) 0,var(--_c) 209deg, #0000 211deg) 
	  border-box;
	clip-path: polygon(0 0,100% 0,calc(100% - 0.577*var(--h)) 100%,0 100%);
	padding: 0 calc(0.288*var(--h)) 0 0;
	margin: 0 calc(-0.288*var(--h)) 0 0;
	box-sizing: border-box;
	transition: flex .4s;
  }
  .buttons button + button {
	--_c: #ff0000;
	// flex: calc(.75 + var(--_s,0));
	background: 
	  conic-gradient(from -90deg at calc(1.3*var(--b)) 100%,var(--_c) 119deg, #0000 121deg) 
	  border-box;
	clip-path: polygon(calc(0.577*var(--h)) 0,100% 0,100% 100%,0 100%);
	margin: 0 0 0 calc(-0.288*var(--h));
	padding: 0 0 0 calc(0.288*var(--h));
  }
  .buttons button:focus-visible {
	outline-offset: calc(-2*var(--b));
	outline: calc(var(--b)/2) solid #000;
	background: none;
	clip-path: none;
	margin: 0;
	padding: 0;
  }
  .buttons button:focus-visible + button {
	background: none;
	clip-path: none;
	margin: 0;
	padding: 0;
  }
  .buttons button:has(+ button:focus-visible) {
	background: none;
	clip-path: none;
	margin: 0;
	padding: 0;
  }
  button:hover,
  button:active:not(:focus-visible) {
	--_s: 1.75;
  }
  button:active {
	box-shadow: inset 0 0 0 100vmax var(--_c);
	color: #fff;
  }
  
  